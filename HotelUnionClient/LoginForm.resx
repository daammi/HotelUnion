<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="panel1.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        /9j/4AAQSkZJRgABAQEAAAAAAAD/2wBDAAoHCBUWFRgWFRUZGRgYGRgYGhwcGhgYHBgaGhoaGhocGhoc
        IS4lHCErHxoYJjgmKy8xNTU1GiQ7QDs0Py40NTH/2wBDAQwMDA8PEBgSEhgxIRgdMTE0MTE0MTE0NDEx
        NDQ0NDQ0NDQ0MT8xPzQ/ND80MT8xPzQxNDExMTExMTExMTExMTH/wAARCADhAOEDASIAAhEBAxEB/8QA
        HAAAAQUBAQEAAAAAAAAAAAAAAAEEBQYHAgMI/8QARhAAAgECAgcEBwMJBwQDAAAAAQIAAxEEIQUGEjFB
        UWEicYGRBxMyobHB8HJz0TM0QlJiorLh8RQWIzWCkrMVQ4TCJVRj/8QAFwEBAQEBAAAAAAAAAAAAAAAA
        AAECA//EABwRAQEBAQEBAAMAAAAAAAAAAAABEQIxIRJBUf/aAAwDAQACEQMRAD8AvMSKTEnRBC0BFMDm
        BimJICEISgiExGMj9J6VSipLtAkCZyzWmd4/W2tUJFMlF5gXPv3SAxOk3JyZzzJJuZNXF603rOyMUpAE
        jeT8pWK+suIY/lCPsyBaszE3JN989adQW4X+MLInsLrZiF3vtd4Bk7gNdATaqlv2kzt3qfleUUg8Rl3C
        dInFGHduk0xseGxSOoZGDA8RPeZborST0muCUb91uhBl80NplK42clcC5XgRzXmOnCXWUveEQRZQsIAR
        YCQEIWkC2jnB4QuTwA3n5CNbSX0dnSYL7V28yMoo8BhUNxfMX4i+RPAXPujPEUSh6cDEpo20AAdoHyt8
        I80iRYd5t3Z/Ir5QGEIkJQRIsIBC8IQEimBiQAxDAzyqPYd+6Az0rpBaSMx4b+p5CZnpTHPWYu3s/ojh
        JbWHSIquVBOwhIHU7iTIPEndy4dZmtQiKFW+6eNN7m53RQ5tmd5906Qj8IPhyaFN9x2SemU8MRol1zGY
        5ie+FpbbhQMuMu2G0aHUXG+w8MvwmOusa5ms29WwM7UDx6ZTQsXq5f2VUg+EbpoBbdpCvU5/CT8msUyl
        irZG5Hf8o8o4ogh0Yqy5g8QZI6U1ZYDaT3SuDaRirZefvmp0z1y1fQOlxXS+QdcmHXmOhkvMs0JpU0nD
        cNzAcR9ZzTsNXV1DKbgi4mpdc7HuIExBFmgt4RIQFE9sPiGQ3XjvHAzxEBAk3r9jat1tfqPD9I8JG1ah
        Y3P9I7pYpAoBByFtwI4ftdBPHE1Va2yLW6W+Zkg8IQhKEiQhAIsSEBTEvCJAGMr2tGkfV0Wse052F6A+
        0R4X90najWBmc6543aqhAckUf7mzN/C3nJVn1BVK+fSe+2DkMzx+uuQ8JHbXG8Wi+cjWHDoRuiIn4RzT
        YHMid4ZA9QDgPoyWkix6u6OG87/xl1pULASE0RRAGUsaNkJy9dY4WjwnsmF6xE3x6giFRuM0f2TbPpKJ
        rJoYMCyjMcpqTWtnK3pr1SZlh3c+glzEY8hKGxl81H0lcGkxOWa35fXwlY1jpoW2qffGmhscaVRH5EX6
        jeR7pvmufUbKDOrzwouGAYG4IuO4z1E6MFiiczoQFvAGESAGAheEAtCG1CBzCEIBCEICXgYQMBtjnsjE
        7gLmY9pLEF3dzvdiffkPK007W3FbGGfPNhsjrfK31zmU1ZmtcxxfKJCLaMae4qWFryT0OLtfjITeZZNB
        Jn1sJz6Iu+i8rSbq1kRbs6jxlMFSq/ZVSFv7RyvHFLQrvmzk9B+JMzHROHTFK9g949w+klYZH4SBXVjK
        6n3xMPQZDa8CdxuKbZNpV10c9Z7sTv8A6yfdCVvIrF6TGHRnKk23AbyZAw05oEKhNt1uv1nM/tZiOpEs
        51hxGK21QBQq7Vgt752sSfOVvGUyHJIt+M1zsZrQdR9J7dP1THNN2eezw8t3lLaDMc0HjjSrK43A5jmv
        EfXKa9h6odQQbg2IPMHOdea5WfXvOrTidAzSCFopgICQhCAl4RYQOYQhASBheF4BCIZy7gAk7hAo3pAx
        tylMcO0epO4fOUuot7C48cpJ6yYo1K7PwLG3RRkPgZF4ls7WmK3zPhLAde6eLtvjjDKuwWO/aC23ZWve
        c1KRByESrgw65y2aEo5yq4YWPlL3oWllfmoMx1W+YeO+yM8o1OtCIdhAXbcAo49+4SYODDrYi8800Sy+
        xTBmFVl9dMSamwqIDtBbHaY+YPdwlp0Vt1FVqiFGO9T8R0O+Lh9EVS+0KdNObcfMSdoYUIMzc85Q4oUV
        KESJxmidsZKptwYAi/cZJ4asLkTurdTcSitYXQlQEiyIt8wqhb+Uh9YNWgEYADbUEjrxl/p4pTI7SZ2h
        kN0gxAPa3MTTdTcbt09gm5TMdVbd5ZjymeaYohK7qPZ2iR3HO3vEsmpeKs6cr7Ddzbvl5Tty49NHE6E5
        WdTTIhC0CICGKRAxbwOYQ2YQEgTAxIBEnVokBJEazYv1dFrHtMNkd5IA+MmJS9bMUHdxfs0luftHJR5m
        /gZKKPjDd8twsOe4W/GN62+KhzvEcZzONyii9jY7jbw6++WPSGBdiEUAlVB5ZWlWIzlv0TpgVEVHX/EQ
        bKsGAJA3ZH2pjqVqVDVcKVNz7ry4aJq9le4CROIpG5uN+/K0daLYgW4iZt1uLVhq8msJigRnKvRfKPKW
        JtILMHEjtKYoADvA843TGZb42xgDix3SrHNXTFKjZiwudwJ3wxWsgKHYUscrADM9JE1dWEqMCWY252Nv
        GS2B0MuHuQwKlcyTuI3DuhHoXawJABtc953icVMVdTnOMfjqapcOuVuMZobgnhItZxpmptV6h/a+AA+U
        f6sVLVR9pSB5yHxb7VRzzdviZPaoUS1dbDIC58j88p3/AE41qymdTlBkO4T0mmCQhC8BYgiGKIBeELmE
        DiLAQgJCLCB51agVSx3KCfAC8yvS+IJohjk1ZzUPCwz2B1OZP+oS+624jYwzi9i+yngxF/deZ1rGbMif
        qIBbln9e6Sk9RlNLg9PwgRPcrZbW4599v6zzAzkbNXGc9lPKcOIoGQMCcwun2VQrrt2BsSc+4/jF0Vpd
        nqHaFr5gcB0kGx909MA4FReRNvOY65iytIw7gjKeriVzDY4owU7juPOTFHHq05t6dUyZ56R0olILc7zy
        J+E6SoOEkKNBSLkXMNRXamtdQ9mjTYcNoq3uFpyujsRVuWdzf/SvieEkcVRqBuxtWvuBNp1Q0XjKm9dl
        ebH4C8ldefxkNtD6Cpja2xtm+RJuAf2eHjE07ihQoueNtle85D66Sw4bBFFsc7b5nWueP263q19lN/Vz
        +A+M1zNce6gMFhXdgiC5J/qTNM1R0P6pbmxYjf45/BfKVjUvBFqjnkuz4tv8LD4TTqNIKABO0jha7Aix
        RCaQkWIYkAMW8LQvAIRLQgcRYWiwOZ1EMBAret6hv7OnA1bnqAp/GZ/pptvFkHdtov8ADNC1rGdF+AqA
        X5bSMB7wJnWmCVxLsBuqBvLZMzSeivbIc3fy3D5zytzjrSAuKL29sPfvFRj841ht41RmZ0i3HOJVF564
        b2T3fCUNyeU5ptZgeRv4iL18IgWQXSjh0qpbicweXdItw9Ntk36HgRPPQOLKG3DlLRiMMlRM/wCk5WZW
        /UPhtJkb5YMBpdefhKxitHsnUc/xngHI3zKxpmH0ihHC89X0mqjfl3zMxi2A3xzhqjuhZmIH6PWF1adO
        6xJTpswPaIOyOJPCZfTcs5ZjcsSSep4+c9dJlvWG5uQOd54YY5idOZjn1dalqbglSgrZFnJZunIeFgJZ
        QZVNUKjGiuyRkSrKcrG+8HqLXEtAOU6RzdGBiQvKFMSF4kBYRIQFvCc2hALRbSvf3jTmIg1jT9YQmrDP
        DE4gILtkvE8pCHWVP1h5zxr6fpsLFvnCpXSuFGIoOqkEkbSEW9tTdfePfM005T2mR+LAXBvcMtlYH92S
        n9uqUGL4aqCpzKHIdbDcPCeOMepiu3Sw1Xa/S2UZlvxIYZC+V5mrEY+IU0lRjmjGw7wb28QPOeAT6zk5
        gdS8S5BqAUl4liGbwRePeRONYdEJh2RabMwKkXa3tA9ru4ZR9WWIR042nNLI9J6Veu+eaEcYU15xQMoj
        b4paBIaNftj4y3YRyuR3H3SnaO9pe+XigA6C3tL8ROXXrcOtocRlIfHYIXuu48Pwkujgi08alK8y0gEw
        BJsOfCTn9mAUKOGX4z2w+HCdo7/hPLG1QqM3IQijaZa9VyN21byyjZBu+uU6qOWueZJ/nEp8/r6znaOd
        q6an6Q2amwWsHB37tobvMfCX1XmJ4fElSCOBB8jLhT1sUDdbzljC/XiXEoR1tnJ1vHOXRf8AahtCZ/8A
        3vHOIdbxzjRoO0OcTaEz3+93WIdbusun3+NDuITOv73fVxCBTvWtxYwLtzM4IimZ1vBttzkroPQWIxbl
        KQuFttuxsiX/AFjz6DOeehdE1MTVWlTF2OZJ9lF4s3QZd+6brojQ6YeklKmLKgzPF2/SduplS/Fb0J6P
        cNTsau1XcfrdlB3IPa/1E90uSYewCgAAblAAAHQDIT3RJ6HKGTX1IG9RbuEomv8AocerLpe69u1t2eZB
        490v9ZyAbCVTWKu+wXttKhuQci3O3heBjTVOc5vyjvSjIXLJaxJyta2eVxGAaG4Qzlp0CN85Mgf6KbtC
        WzAVLZE98pmDcBpa8Dci9swBOfbXKUVotzwM8knorTm29FY8ZCax4o7GyOMmVB3ytabQk2HCa59ZqGVM
        h9Z2jYtlaP6qWXx+UYMuc7MOqd4/Vb2HHwvnlGKm3hO2qm4PEd3vgOMThCPauv2gR8YyqUrcZeNWdMl1
        9TUs629h81I/9e+xHxkhpLUJKil8M5QnPYc7SdwbevvhNZpc8YgaPtK6MrYd9iqhRuF8ww5qRvEZAQsI
        DC86CxAJQeMWLsDp5iEDkw6wtHeisIa1anTA9t1U917t+6DA130faOFLDJdAHqDbqG3aN7lQT0BEtS4g
        qbHMe/8AnG2jaYsxHDIDoIbfGGUuhBFxEYXFo1w9TslhvHDn/Oe3rQy7QgN2r5Z7wc/DfI/SlZChV7FW
        B5ZQxJJ9ZsntL2x4cJXschrIbZHeN+RgZrp3Bmm7AgkE3VxmCvI8jIe5l0xmIQdiq5U8bAX39QZE4qlh
        19htrwPw4SLKhkoMVLbgu8/KeKmPMRXL9lRZeXOdJhLKW5bpVM0Yg3Bz4TQtV6KYkdghXHtD9HwHD+cz
        1riSWhdItRcOvy3dJmzTWp4vQxThl8Y0XR0e6J1jFVLkqe48eoOQMkEqrv2CfskW+MxeGp0jP+mkKTbr
        KnpXAMWcBTcdNwG8k8BaaO1VNk3Bz6gD4Sq6waQQKQueRyUZXPEniYnJemdY1tke/wA5HEx5iczc8hGz
        zoy5BnVFCzZb7X6ZRAJYtVdEtUqA2y4XGRP4Wgp3q9onbZHzAyYWByI9pSRmOatNWwFLZUbz35nz4yL0
        dopaC7C8rXPHO/gMzlJtRYAS/pgy0xoqliKZp1VDKd3NTwKngZiOnNEvhqzUn4Zqf1lO4j4TeXe7W6SI
        1n0AmKplWHbAPq23FW4An9U8RDUYZeE6rUmRirizKxVgeBGRE4AhXpbpCcfW4RY0I0t3o5wm3iWcjKmh
        I+0/ZHu2pU7TSPRthdmg9S3tvYdyD8S0F8aJghZO+NWNriPKK2QRjWMrJ9g/Z8ZzTbYb9lvc384YBuye
        hnTJe685ENKP5w46fKeQ0RZ22SNkkm3K85oPertHfax8CBJocDAzjXvVk7PrUzI9rK3j3TNfVnjzn0lU
        oqwIYAgixB5GZhrRqlsuWpi18+8cu+FlUFQBO9smw3yao6CZmsQet/hHWkNHKllUAAWGXHLM+d5F1Wam
        DYqWAJA3xugtvMvWicECrJbeAffb5yW0Tg0N1KKSLg3A98GqDoo1A3+ENo/qgi/eBL1oTFO9lek6ndcb
        YHfbalkwmh6Q/wC2n+0ZHnJbD0VH6IvztGJqKr6OBXPd1ufcTKtrIQiFVGZvc5d1potRLjMTPdbaRJJV
        bjcLc+UpqgWzPdGdYZ5SRbBVbkbJBJP1yk1oLVhnfti/y6mRrUXoXQr1W2iLIN559Bzmn6taNCdu3QD6
        6R5gtDIgAAFgMhb3yXp0wq2EYluvApdp71IiLxnVSVDRD2yelo4f2es59UQL2nBa4vEGQ+kHBBMYzAWF
        RUfxI2W96mVcCaB6UqGdBxydD4FSPiZQAPr63w0LfX0ITnZPKLGAYzY9U8PsYSgtsygY97na+cx9Ke2y
        oN7EL5kD5zd8PSC7CDcuyvgAB8oidJj9HwkZWOZko+6RNZgTDJ1o47xHVuMY4B7PbnHi8c90KicOf8Rx
        3/GTmGa6yD2bVHt9XMk8BU4GESAjLG4PbG+xnjgNPYas5SnWRnBI2c1bLfZWAvu4SUK3hUD/ANLTjba6
        CQWlNFAvkBll85cMSjKOyBfrIv8As5tc7zBEJozAKjXbjcZefykpgcIFdsvoxzS0c3P6t/OSVPDgEG3f
        Jg8xTtOgBHmyI0qggyhGMjMbglc7jfpbzkhtRUGd5KIunoBBmc/KSGGwCoLKsfpPXZlDQJDYvujpad53
        TS14DDYtO0p3InpiDdgI4C2gMdItZQOsZ00J8J3pSp27Cd4ZbKxhFG9JdK+GRv1Ko8mVgflMvtNb15p7
        WBf9lkbycD5zI79Iagt1EIsI1UtqthtvF0VO71gY9yAt8QJsuHHbXvmX+jnDFsUz8EpsfFmVR7tqanhh
        2x3yxmpZxlIastmMm3GUjMWM7yRDam1iDJFsz3i8jlzMeBjsg77fCFMT7dTw+M4xWK9VSep+ojt5AkfA
        T0J7b91/f/OQutlW2Aq9Qq/7nUQigaOxL0npYgbkdRfqLFh4rfzmta6drA1COGw4PLtr+MzGpgv/AItH
        ORfFP5erKfFDNFx+IFXRTPf2sOrHvGzf3gwID0f6Yf15ou7MjoSu0xbZZc+zfdddryEktcNYK2FxChFR
        kamG2WU79pgbMpB4DnKRoiqaVSjXvktWx6W2C3mrnylq9JFAvXoKu9kceTXgWDSGs60sPQxAp7a1rXAb
        Z2CVuRuN8ww8JGr6Qaf/ANd/96/hIXBXraKqJvbDVA69ENmPud/KTGqGhcLiMMrvSDOrujHacE2NxexH
        6LLAmsHrMlTDVcSqMBSJDJcEmwVsju3N7pEJ6QcK2TpUT/SrD91rnyklpbAUcNgsSKabCtTdmG0xu2xs
        jNibbhKDqpq4mLw9Z3Lq6sVpkEWyQGxBGeZ98DSsNikdA6OGQi4YbrDffkRnlOcDpGjVJFOqjkC5CsCQ
        DlcjeJTvRpiG2a9I5jZFQDkTdW87L5Rt6MabGu9+NPLwZYGk+sCi7MAOpAHmY5RwRcEEcwQR7pkmNSpj
        MYyXBZndEDE7KIm1kOXZU95jhkxGjMQhZgUbNtknYdL2YEEZMPwkw1q6TyOLS+ztptbrbS3v3XvGumLN
        ha1jcNRqEHoUMxek5pslUDJHQ3/aBDW8oVtqm7x0TM61+xDoaDo7ptetvssy39i249/nH2oWmGenUpux
        Zk7YLEsSrDMXPIj96MROVwWdjwvPam67Bzuc5BYNGFNFdydlFBzOZsL3O85yXw1vVHZHGUQWs6bWCxA/
        /Mt5WPymNHhNw03T2sNXFv8As1LeCGYbt9Ia5dXPSE52++ENL36MfbrfYT4maNh/aHfCEsYqZG6ReOhC
        SBokd0/ZPhCEIZfpv9k/ESva5/mL/bp/xiJCBE4//KMP9786kseA/wAmb7mp/E0IQKKPzX/yD/xJLrrb
        +dYH7A/iWEJII/Ur8yx33Q/46kmPRj+RrfeL/AIQgS+un5liPsH5SB9GH5q/3rfwJFhKIr0cflq/3P8A
        7id+jj85P3L/AMSQhA8tCf5qPv8AEfCpJP0ne1Q+zU+KQhCVbD+Y/wDjH/jmQYv80b7+n/x1IQiKt3pA
        9jDd9T4JGGov5ap9w/8AEsIQLWvCP8P+SPeYkIDLSH5Ct91U/gaYR+EIRWoSEISK/9k=
</value>
  </data>
</root>